---
export interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <script>
      // Dark Mode Script
      if (
        localStorage.getItem("color-theme") === "dark" ||
        (!("color-theme" in localStorage) &&
          window.matchMedia("(prefers-color-scheme: dark)").matches)
      ) {
        document.documentElement.classList.add("dark");
      } else {
        document.documentElement.classList.remove("dark");
      }
    </script>
  </head>
  <body>
    <slot />
    <script>
      import "flowbite";
      import "./darkTheme.js";
    </script>
  </body>
</html>

<script>
  //* Local Storage *//
  import { likeMovie, likedMoviesList } from "../api/main.js";
  const nodeListOfBtn = document.querySelectorAll("button.absolute.right-1");
  const btns = [...nodeListOfBtn];

  btns.forEach((btn) => {
    btn.addEventListener("click", () => {
      const id: string = btn.id; //dame el id
      const movie: HTMLElement = btn.parentElement.parentElement; //dame el elemento movie
      // console.log(id)
      // console.log(movie)
      btn.classList.toggle("text-yellow-300"); //pinta button de amarillo al hacer click
      //pero necesito que se pinte si esta en el LS

      //TODO
      // - que se guarde en LS
      likeMovie(id, movie);
    });
  });

  btns.forEach((btn) => {
    const id = btn.id; //dame el id
    //validaci√≥n
    const movies = likedMoviesList();

    for (let i = 0; i < movies.length; i++) {
      if (movies[i].id === id) {
        btn.classList.add("text-yellow-300");
        break;
      }
    }
  });
</script>
